// === –°–¢–†–ê–ù–ò–¶–ê –°–û –°–ü–ò–°–ö–û–ú –ü–û–°–¢–û–í ===
if (window.location.pathname.endsWith("posts.html")) {
  fetch("posts/posts.json")
    .then((r) => r.json())
    .then((posts) => {
      const container = document.getElementById("posts-container");
      const search = document.getElementById("search");

      function render(filter = "") {
        container.innerHTML = "";
        posts
          .filter(p =>
            p.title.toLowerCase().includes(filter.toLowerCase()) ||
            p.description.toLowerCase().includes(filter.toLowerCase())
          )
          .forEach(post => {
            const el = document.createElement("div");
            el.className = "post-card";
            el.innerHTML = `
              <img src="${post.image}" alt="${post.title}">
              <h2>${post.title}</h2>
              <p>${post.description}</p>
              <a href="post.html?id=${post.id}" class="read-more">–ß–∏—Ç–∞—Ç—å</a>
            `;

            // üëâ –¥–µ–ª–∞–µ–º –≤—Å—é –∫–∞—Ä—Ç–æ—á–∫—É –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–π, –∫—Ä–æ–º–µ –∫–Ω–æ–ø–∫–∏
            el.addEventListener("click", (e) => {
              if (e.target.tagName.toLowerCase() !== "a") {
                window.location.href = `post.html?id=${post.id}`;
              }
            });

            container.appendChild(el);
          });
      }

      render();
      search.addEventListener("input", e => render(e.target.value));
    })
    .catch(err => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å—Ç–æ–≤:", err));
}

// === –°–¢–†–ê–ù–ò–¶–ê –û–¢–î–ï–õ–¨–ù–û–ì–û –ü–û–°–¢–ê ===
if (window.location.pathname.endsWith("post.html")) {
  const params = new URLSearchParams(window.location.search);
  const postId = params.get("id");

  fetch("posts/posts.json")
    .then((r) => r.json())
    .then((posts) => {
      const post = posts.find(p => p.id === postId);
      if (!post) {
        document.getElementById("post-content").innerHTML = "<p>–ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.</p>";
        return;
      }

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
      document.title = `${post.title} | LASNET Blog`;
      document.getElementById("meta-description").content = post.description;
      document.getElementById("og-title").content = post.title;
      document.getElementById("og-description").content = post.description;
      document.getElementById("og-image").content = post.image;
      document.getElementById("og-url").content = window.location.href;

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç–∞—Ç—å–∏ (.md)
      fetch(`posts/${post.id}.md`)
        .then((r) => r.text())
        .then((md) => {
          const html = marked.parse(md);
          document.getElementById("post-content").innerHTML = html;
        })
        .catch(err => {
          document.getElementById("post-content").innerHTML = "<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç—å–∏.</p>";
          console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ .md:", err);
        });
    })
    .catch(err => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ posts.json:", err));
}
